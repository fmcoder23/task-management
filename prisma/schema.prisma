generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Status {
  TODO
  IN_PROGRESS
  COMPLETED
  EXPIRED
}

model User {
  id       String  @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fullname String
  photo    String?
  email    String
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  taskCategories TaskCategory[]
  Task           Task[]

  @@id([id])
  @@unique([email])
}

model TaskCategory {
  id   String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @db.Uuid
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  tasks Task[]

  @@id([id])
}

model Task {
  id          String    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String
  description String?
  dueDate     DateTime?
  photo       String?
  priority    Priority?
  status      Status    @default(TODO)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categoryId String?       @db.Uuid
  category   TaskCategory? @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  userId String @db.Uuid
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([id])
  @@index([title])
}
